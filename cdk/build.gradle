buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        // https://github.com/google/protobuf-gradle-plugin
        classpath "gradle.plugin.com.google.protobuf:protobuf-gradle-plugin:0.8.9"
    }
}

// Plugin for printing a task tree.  Use with 'gradle :cdk:<task name> :cdk:taskTree'
plugins {
    id "com.dorongold.task-tree" version "1.5"
}
apply plugin: 'com.android.library'
apply plugin: 'com.google.protobuf'
apply from: 'maven-push.gradle'

android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 24
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.0.0"
    }
    plugins {
        lite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
        // Note that these batch files are windows-specific.  If you need to compile this on
        // linux, make some shell scripts similar to these batch scripts, and conditionally point
        // these paths at them instead.
        text_parser {
            path = projectDir.absolutePath + '/src/main/proto-plugin/ca/isupeene/charactersheet/cdk/protoc-gen-text-parser.bat'
        }
        // These plugin names need to be lexicographically after 'lite'.
        z_add_proto_or_builder {
            path = projectDir.absolutePath + '/src/main/proto-plugin/ca/isupeene/charactersheet/cdk/protoc-gen-add-proto-or-builder.bat'
        }
        z_feature_source {
            path = projectDir.absolutePath + '/src/main/proto-plugin/ca/isupeene/charactersheet/cdk/protoc-gen-feature-source.bat'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                lite { }
                text_parser { }
                z_add_proto_or_builder {
                    outputSubDir = 'lite'
                }
                z_feature_source {
                    outputSubDir = 'lite'
                }
            }
            task.inputs.files(
                    projectDir.absolutePath + '/src/main/proto-plugin/ca/isupeene/charactersheet/cdk/protoc-gen-text-parser.bat',
                    projectDir.absolutePath + '/src/main/proto-plugin/ca/isupeene/charactersheet/cdk/protoc-gen-text-parser.py',
                    projectDir.absolutePath + '/src/main/proto-plugin/ca/isupeene/charactersheet/cdk/protoc-gen-add-proto-or-builder.bat',
                    projectDir.absolutePath + '/src/main/proto-plugin/ca/isupeene/charactersheet/cdk/protoc-gen-add-proto-or-builder.py',
                    projectDir.absolutePath + '/src/main/proto-plugin/ca/isupeene/charactersheet/cdk/protoc-gen-feature-source.bat',
                    projectDir.absolutePath + '/src/main/proto-plugin/ca/isupeene/charactersheet/cdk/protoc-gen-feature-source.py',
            )
        }
    }
}

configurations {
    javadocDeps
}

// TODO: When java code is added, make sure to add it to these tasks' source!
task javadoc(type: Javadoc) {
    failOnError false
    source protobuf.generatedFilesBaseDir
    include '**/*.java'
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.javadocDeps
    dependsOn 'assembleDebug'
}

task javadocJar(type: Jar) {
    archiveClassifier.set("javadoc")
    from javadoc
    includeEmptyDirs false
}

task androidSourcesJar(type: Jar) {
    archiveClassifier.set("sources")
    from android.sourceSets.main.proto.sourceDirectories
    from projectDir.absolutePath + '/src/main/proto-plugin'
    include '**/*.proto'
    include '**/*.bat'
    include '**/*.py'
    includeEmptyDirs false
}

artifacts {
    archives androidSourcesJar
    archives javadocJar
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.protobuf:protobuf-lite:3.0.0'
    javadocDeps 'com.google.protobuf:protobuf-lite:3.0.0'
    javadocDeps 'androidx.core:core:1.3.2:sources'
}
